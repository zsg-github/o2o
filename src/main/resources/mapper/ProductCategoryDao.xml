<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--映射文件要与相对应的mapper接口通过namespace属性进行关联-->
<mapper namespace="com.njupt.o2o.dao.ProductCategoryDao">

    <!--id为mapper类中对应方法名，resultType为定义的接收类型，一般为对应实体类-->
    <select id="queryProductCategoryList" resultType="com.njupt.o2o.entity.ProductCategory">
        select product_category_id,product_category_name,priority,create_time,shop_id
        from tb_product_category
        where shop_id = #{shopId}
        order by priority desc
    </select>

    <!--批量增加商品类别-->
    <insert id="batchInsertProductCategory" parameterType="java.util.List">
        insert into tb_product_category(product_category_name,priority,create_time,shop_id)
        values
        <!--如果传入的是单参数且类型是一个List/Array,collection属性值为list/array,item表示集合中每一个元素迭代是的别名，index表示每次迭代的位置-->
        <foreach collection="list" item="productCategory" index="index" separator=",">
            (
            #{productCategory.productCategoryName},
            #{productCategory.priority},
            #{productCategory.createTime},
            #{productCategory.shopId}
            )
        </foreach>
    </insert>

    <delete id="deleteProductCategory">
        delete from
            tb_product_category
        where product_category_id = #{productCategoryId} and shop_id = {shopId}
    </delete>

</mapper>